<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="db_union.dao.AdviceMapper" >
  <resultMap id="BaseResultMap" type="db_union.model.Advice" >
    <id column="advice_id" property="adviceId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="db_union.model.Advice" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    advice_id, title, status, date, user_id
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_advice
    where advice_id = #{adviceId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_advice
    where advice_id = #{adviceId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="db_union.model.Advice" >
    insert into tb_advice (advice_id, title, status, 
      date, user_id, content
      )
    values (#{adviceId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, 
      #{date,jdbcType=TIMESTAMP}, #{userId,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="db_union.model.Advice" >
    insert into tb_advice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="adviceId != null" >
        advice_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="adviceId != null" >
        #{adviceId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="db_union.model.Advice" >
    update tb_advice
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where advice_id = #{adviceId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="db_union.model.Advice" >
    update tb_advice
    set title = #{title,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      date = #{date,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where advice_id = #{adviceId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="db_union.model.Advice" >
    update tb_advice
    set title = #{title,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      date = #{date,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=VARCHAR}
    where advice_id = #{adviceId,jdbcType=INTEGER}
  </update>
</mapper>